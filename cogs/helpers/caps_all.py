def ind_state(state):
    state_cap = {
        "andhra pradesh" : "Hyderabad (Proposed Capital Amaravati)",
        "arunachal pradesh" : "Itanagar",
        "assam"	: "Dispur",
        "bihar" : "Patna",
        "chhattisgarh" : "Raipur",
        "goa" : "Panaji",
        "gujarat" : "Gandhinagar",
        "haryana" : "Chandigarh",
        "himachal" : "Pradesh",
        "jharkhand" : "Ranchi",
        "karnataka" : "Bengaluru" ,
        "kerala" : "Thiruvananthapuram",
        "madhya pradesh" : "Bhopal",
        "mp" : "Bhopal",
        "maharashtra" : "Mumbai",
        "manipur" : "Imphal",
        "meghalaya" : "Shillong",
        "mizoram" : "Aizawl",
        "nagaland" : "Kohima",
        "odisha" : "Bhubaneswar",
        "punjab" : "Chandigarh",
        "rajasthan" : "Jaipur",
        "sikkim" : "Gangtok",
        "tamil nadu" : "Chennai",
        "telangana" : "Hyderabad",
        "tripura" : "Agartala",
        "uttar pradesh" : "Lucknow",
        "up" : "Lucknow",
        "uttarakhand" : "Dehradun",
        "west bengal" : "Kolkata"
    }

    if state not in state_cap.keys():
        return -1
    return state_cap[state]


def world_caps(country):
    import json
    country_cap = {
        "afghanistan" : "Kabul",
        "albania" : "Tirana",
        "algeria" : "Alger",
        "american samoa" : "Fagatogo",
        "andorra" : "Andorra la Vella",        
        "angola" : "Luanda",
        "anguilla" : "The Valley",
        "antigua and barbuda" : "Saint John's",
        "argentina" : "Buenos Aires",
        "armenia" : "Yerevan",
        "aruba" : "Oranjestad",
        "australia" : "Canberra",
        "austria" : "Wien",
        "azerbaijan" : "Baku",
        "bahamas" : "Nassau",
        "bahrain" : "al-Manama",
        "bangladesh" : "Dhaka",
        "barbados" : "Bridgetown",
        "belarus" : "Minsk",
        "belgium" : "Bruxelles [Brussel]",
        "belize" : "Belmopan",
        "benin" : "Porto-Novo",
        "bermuda" : "Hamilton",
        "bhutan" : "Thimphu",
        "bolivia" : "La Paz",
        "bosnia and herzegovina" : "Sarajevo",
        "botswana" : "Gaborone",
        "brazil" : "BrasÃ­lia",
        "brunei" : "Bandar Seri Begawan",
        "bulgaria" : "Sofia",
        "burkina faso" : "Ouagadougou",
        "burundi" : "Bujumbura",
        "cambodia" : "Phnom Penh",
        "cameroon" : "Yaound",
        "canada" : "Ottawa",
        "cape verde" : "Praia",
        "cayman islands" : "George Town",
        "central african republic" : "Bangui",
        "chad" : "N'Djam",
        "chile" : "Santiago de Chile",
        "china" : "Peking",
        "christmas island" : "Flying Fish Cove",
        "cocos (keeling) islands" : "West Island",
        "colombia" : "Santaf",
        "comoros" : "Moroni",
        "congo" : "Brazzaville",
        "cook islands" : "Avarua",
        "costa rica" : "San Jos",
        "croatia" : "Zagreb",
        "cuba" : "La Habana",
        "cyprus" : "Nicosia",
        "czech republic" : "Praha",
        "denmark" : "Copenhagen",
        "djibouti" : "Djibouti",
        "dominica" : "Roseau",
        "dominican republic" : "Santo Domingo de Guzm",
        "east timor" : "Dili",
        "ecuador" : "Quito",
        "egypt" : "Cairo",
        "el salvador" : "San Salvador",
        "england" : "London",
        "equatorial guinea" : "Malabo",
        "eritrea" : "Asmara",
        "estonia" : "Tallinn",
        "ethiopia" : "Addis Abeba",
        "falkland islands" : "Stanley",
        "faroe islands" : "TÃ³rshavn",
        "fiji islands" : "Suva",
        "finland" : "Helsinki [Helsingfors]",
        "france" : "Paris",
        "french guiana" : "Cayenne",
        "french polynesia" : "Papeete",
        "gabon" : "Libreville",
        "gambia" : "Banjul",
        "georgia" : "Tbilisi",
        "germany" : "Berlin",
        "ghana" : "Accra",
        "gibraltar" : "Gibraltar",
        "greece" : "Athenai",
        "greenland" : "Nuuk",
        "grenada" : "Saint George's",
        "guadeloupe" : "Basse-Terre",
        "guam" : "Aga",
        "guatemala" : "Ciudad de Guatemala",
        "guinea" : "Conakry",
        "guinea-bissau" : "Bissau",
        "guyana" : "Georgetown",
        "haiti" : "Port-au-Prince",
        "holy see (vatican city state)" : "Citt",
        "honduras" : "Tegucigalpa",
        "hong kong" : "Victoria",
        "hungary" : "Budapest",
        "iceland" : "Reykjav",
        "india" : "New Delhi",
        "indonesia" : "Jakarta",
        "iran" : "Tehran",
        "iraq" : "Baghdad",
        "ireland" : "Dublin",
        "israel" : "Jerusalem",
        "italy" : "Roma",
        "ivory coast" : "Yamoussoukro",
        "jamaica" : "Kingston",
        "japan" : "Tokyo",
        "jordan" : "Amman",
        "kazakhstan" : "Astana",
        "kenya" : "Nairobi",
        "kiribati" : "Bairiki",
        "kuwait" : "Kuwait",
        "kyrgyzstan" : "Bishkek",
        "laos" : "Vientiane",
        "latvia" : "Riga",
        "lebanon" : "Beirut",
        "lesotho" : "Maseru",
        "liberia" : "Monrovia",
        "libyan arab jamahiriya" : "Tripoli",
        "liechtenstein" : "Vaduz",
        "lithuania" : "Vilnius",
        "luxembourg" : "Luxembourg [Luxemburg/L",
        "macao" : "Macao",
        "north macedonia" : "Skopje",
        "madagascar" : "Antananarivo",
        "malawi" : "Lilongwe",
        "malaysia" : "Kuala Lumpur",
        "maldives" : "Male",
        "mali" : "Bamako",
        "malta" : "Valletta",
        "marshall islands" : "Dalap-Uliga-Darrit",
        "martinique" : "Fort-de-France",
        "mauritania" : "Nouakchott",
        "mauritius" : "Port-Louis",
        "mayotte" : "Mamoutzou",
        "mexico" : "Ciudad de M",
        "micronesia, federated states of" : "Palikir",
        "moldova" : "Chisinau",
        "monaco" : "Monaco-Ville",
        "mongolia" : "Ulan Bator",
        "montenegro" : "Podgorica",
        "montserrat" : "Plymouth",
        "morocco" : "Rabat",
        "mozambique" : "Maputo",
        "myanmar" : "Rangoon (Yangon)",
        "namibia" : "Windhoek",
        "nauru" : "Yaren",
        "nepal" : "Kathmandu",
        "netherlands" : "Amsterdam",
        "netherlands antilles" : "Willemstad",
        "new caledonia" : "Noum",
        "new zealand" : "Wellington",
        "nicaragua" : "Managua",
        "niger" : "Niamey",
        "nigeria" : "Abuja",
        "niue" : "Alofi",
        "norfolk island" : "Kingston",
        "north korea" : "Pyongyang",
        "northern ireland" : "Belfast",
        "northern mariana islands" : "Garapan",
        "norway" : "Oslo",
        "oman" : "Masqat",
        "pakistan" : "Islamabad",
        "palau" : "Koror",
        "palestine" : "Gaza",
        "panama" : "Ciudad de Panam",
        "papua new guinea" : "Port Moresby",
        "paraguay" : "Asunci",
        "peru" : "Lima",
        "philippines" : "Manila",
        "pitcairn" : "Adamstown",
        "poland" : "Warszawa",
        "portugal" : "Lisboa",
        "puerto rico" : "San Juan",
        "qatar" : "Doha",
        "reunion" : "Saint-Denis",
        "romania" : "Bucuresti",
        "russian federation" : "Moscow",
        "rwanda" : "Kigali",
        "saint helena" : "Jamestown",
        "saint kitts and nevis" : "Basseterre",
        "saint lucia" : "Castries",
        "saint pierre and miquelon" : "Saint-Pierre",
        "saint vincent and the grenadines" : "Kingstown",
        "samoa" : "Apia",
        "san marino" : "San Marino",
        "sao tome and principe" : "S",
        "saudi arabia" : "Riyadh",
        "scotland" : "Edinburgh",
        "senegal" : "Dakar",
        "serbia" : "Belgrade",
        "seychelles" : "Victoria",
        "sierra leone" : "Freetown",
        "singapore" : "Singapore",
        "slovakia" : "Bratislava",
        "slovenia" : "Ljubljana",
        "solomon islands" : "Honiara",
        "somalia" : "Mogadishu",
        "south africa" : "Pretoria",
        "south korea" : "Seoul",
        "south sudan" : "Juba",
        "spain" : "Madrid",
        "sri lanka" : "Colombo",
        "sudan" : "Khartum",
        "suriname" : "Paramaribo",
        "svalbard and jan mayen" : "Longyearbyen",
        "swaziland" : "Mbabane",
        "sweden" : "Stockholm",
        "switzerland" : "Bern",
        "syria" : "Damascus",
        "tajikistan" : "Dushanbe",
        "tanzania" : "Dodoma",
        "thailand" : "Bangkok",
        "the democratic republic of congo" : "Kinshasa",
        "togo" : "LomÃ©",
        "tokelau" : "Fakaofo",
        "tonga" : "Nuku'alofa",
        "trinidad and tobago" : "Port-of-Spain",
        "tunisia" : "Tunis",
        "turkey" : "Ankara",
        "turkmenistan" : "Ashgabat",
        "turks and caicos islands" : "Cockburn Town",
        "tuvalu" : "Funafuti",
        "uganda" : "Kampala",
        "ukraine" : "Kyiv",
        "united arab emirates" : "Abu Dhabi",
        "united kingdom" : "London",
        "uk" : "London",
        "united states" : "Washington",
        "united states of america" : "Washington",
        "us" : "Washington",
        "usa" : "Washington",
        "uruguay" : "Montevideo",
        "uzbekistan" : "Toskent",
        "vanuatu" : "Port-Vila",
        "venezuela" : "Caracas",
        "vietnam" : "Hanoi",
        "virgin islands, british" : "Road Town",
        "virgin islands, u.s." : "Charlotte Amalie",
        "wales" : "Cardiff",
        "wallis and futuna" : "Mata-Utu",
        "western sahara" : "El-Aai",
        "yemen" : "Sanaa",
        "zambia" : "Lusaka",
        "zimbabwe" : "Harare"
    }

    # code to generate dictionary from json:
    # with open('worldCap.json') as json_file:
    #     data = json.load(json_file)
    #     for i in data:
    #         if type(i['city']) == str:
    #             print('"' + i['country'].lower() + '"' + " : " + '"' + i['city'] + '",')

    if country not in country_cap.keys():
        return -1
    return country_cap[country]


def us_caps(state):
    states_cap = {
        "al" : "Montgomery",
        "alabama" : "Montgomery",
        "ak" : "Juneau",
        "alaska" : "Juneau",     
        "az" : "Phoenix",
        "arizona" : "Phoenix",
        "ar" : "Little Rock",
        "arkansas" : "Little Rock",
        "ca" : "Sacramento",
        "california" : "Sacramento",
        "co" : "Denver",
        "colorado" : "Denver",
        "ct" : "Hartford",
        "connecticut" : "Hartford",
        "de" : "Dover",
        "delaware" : "Dover",
        "fl" : "Tallahassee",
        "florida" : "Tallahassee",
        "ga" : "Atlanta",
        "georgia" : "Atlanta",
        "hi" : "Honolulu",
        "hawaii" : "Honolulu",
        "id" : "Boise",
        "idaho" : "Boise",
        "il" : "Springfield",
        "illinois" : "Springfield",
        "in" : "Indianapolis",
        "indiana" : "Indianapolis",
        "ia" : "Des Moines",
        "iowa" : "Des Moines",
        "ks" : "Topeka",
        "kansas" : "Topeka",
        "ky" : "Frankfort",
        "kentucky" : "Frankfort",
        "la" : "Baton Rouge",
        "louisiana" : "Baton Rouge",
        "me" : "Augusta",
        "maine" : "Augusta",
        "md" : "Annapolis",
        "maryland" : "Annapolis",
        "ma" : "Boston",
        "massachusetts" : "Boston",
        "mi" : "Lansing",
        "michigan" : "Lansing",
        "mn" : "Saint Paul",
        "minnesota" : "Saint Paul",
        "ms" : "Jackson",
        "mississippi" : "Jackson",
        "mo" : "Jefferson City",
        "missouri" : "Jefferson City",
        "mt" : "Helana",
        "montana" : "Helana",
        "ne" : "Lincoln",
        "nebraska" : "Lincoln",
        "nv" : "Carson City",
        "nevada" : "Carson City",
        "nh" : "Concord",
        "new hampshire" : "Concord",
        "nj" : "Trenton",
        "new jersey" : "Trenton",
        "nm" : "Santa Fe",
        "new mexico" : "Santa Fe",
        "ny" : "Albany",
        "new york" : "Albany",
        "nc" : "Raleigh",
        "north carolina" : "Raleigh",
        "nd" : "Bismarck",
        "north dakota" : "Bismarck",
        "oh" : "Columbus",
        "ohio" : "Columbus",
        "ok" : "Oklahoma City",
        "oklahoma" : "Oklahoma City",
        "or" : "Salem",
        "oregon" : "Salem",
        "pa" : "Harrisburg",
        "pennsylvania" : "Harrisburg",
        "ri" : "Providence",
        "rhode island" : "Providence",
        "sc" : "Columbia",
        "south carolina" : "Columbia",
        "sd" : "Pierre",
        "south dakota" : "Pierre",
        "tn" : "Nashville",
        "tennessee" : "Nashville",
        "tx" : "Austin",
        "texas" : "Austin",
        "ut" : "Salt Lake City",
        "utah" : "Salt Lake City",
        "vt" : "Montpelier",
        "vermont" : "Montpelier",
        "va" : "Richmond",
        "virginia" : "Richmond",
        "wa" : "Olympia",
        "washington" : "Olympia",
        "wv" : "Charleston",
        "west virginia" : "Charleston",
        "wi" : "Madison",
        "wisconsin" : "Madison",
        "wy" : "Cheyenne",
        "wyoming" : "Cheyenne"
    }

    # code to convert json to dictionary.
    # import json

    # with open('US_caps.json') as json_file:
    #     data = json.load(json_file)
    #     for i in data:
    #         print('"' + i['abbr'].lower() + '"' + " : " + '"' + i['capital'] + '",')
    #         print('"' + i['name'].lower() + '"' + " : " + '"' + i['capital'] + '",')
    
    if state not in states_cap.keys():
        return -1
    return states_cap[state]


def us_state_lat(state):
    lats = {
        "al" : "32.361538",
        "alabama" : "32.361538",   
        "ak" : "58.301935",        
        "alaska" : "58.301935",    
        "az" : "33.448457",        
        "arizona" : "33.448457",   
        "ar" : "34.736009",        
        "arkansas" : "34.736009",  
        "ca" : "38.555605",        
        "california" : "38.555605",
        "co" : "39.7391667",
        "colorado" : "39.7391667",
        "ct" : "41.767",
        "connecticut" : "41.767",
        "de" : "39.161921",
        "delaware" : "39.161921",
        "fl" : "30.4518",
        "florida" : "30.4518",
        "ga" : "33.76",
        "georgia" : "33.76",
        "hi" : "21.30895",
        "hawaii" : "21.30895",
        "id" : "43.613739",
        "idaho" : "43.613739",
        "il" : "39.783250",
        "illinois" : "39.783250",
        "in" : "39.790942",
        "indiana" : "39.790942",
        "ia" : "41.590939",
        "iowa" : "41.590939",
        "ks" : "39.04",
        "kansas" : "39.04",
        "ky" : "38.197274",
        "kentucky" : "38.197274",
        "la" : "30.45809",
        "louisiana" : "30.45809",
        "me" : "44.323535",
        "maine" : "44.323535",
        "md" : "38.972945",
        "maryland" : "38.972945",
        "ma" : "42.2352",
        "massachusetts" : "42.2352",
        "mi" : "42.7335",
        "michigan" : "42.7335",
        "mn" : "44.95",
        "minnesota" : "44.95",
        "ms" : "32.320",
        "mississippi" : "32.320",
        "mo" : "38.572954",
        "missouri" : "38.572954",
        "mt" : "46.595805",
        "montana" : "46.595805",
        "ne" : "40.809868",
        "nebraska" : "40.809868",
        "nv" : "39.160949",
        "nevada" : "39.160949",
        "nh" : "43.220093",
        "new hampshire" : "43.220093",
        "nj" : "40.221741",
        "new jersey" : "40.221741",
        "nm" : "35.667231",
        "new mexico" : "35.667231",
        "ny" : "42.659829",
        "new york" : "42.659829",
        "nc" : "35.771",
        "north carolina" : "35.771",
        "nd" : "48.813343",
        "north dakota" : "48.813343",
        "oh" : "39.962245",
        "ohio" : "39.962245",
        "ok" : "35.482309",
        "oklahoma" : "35.482309",
        "or" : "44.931109",
        "oregon" : "44.931109",
        "pa" : "40.269789",
        "pennsylvania" : "40.269789",
        "ri" : "41.82355",
        "rhode island" : "41.82355",
        "sc" : "34.000",
        "south carolina" : "34.000",
        "sd" : "44.367966",
        "south dakota" : "44.367966",
        "tn" : "36.165",
        "tennessee" : "36.165",
        "tx" : "30.266667",
        "texas" : "30.266667",
        "ut" : "40.7547",
        "utah" : "40.7547",
        "vt" : "44.26639",
        "vermont" : "44.26639",
        "va" : "37.54",
        "virginia" : "37.54",
        "wa" : "47.042418",
        "washington" : "47.042418",
        "wv" : "38.349497",
        "west virginia" : "38.349497",
        "wi" : "43.074722",
        "wisconsin" : "43.074722",
        "wy" : "41.145548",
        "wyoming" : "41.145548"
    }
    
    # code to convert json to dictionary.
    # import json

    # with open('US_caps.json') as json_file:
    #         data = json.load(json_file)
    #         for i in data:
    #             print('"' + i['abbr'].lower() + '"' + " : " + '"' + i['lat'] + '",')
    #             print('"' + i['name'].lower() + '"' + " : " + '"' + i['lat'] + '",')

    if state not in lats.keys():
        return -1
    return lats[state]


def us_state_long(state):
    longs = {
        "al" : "-86.279118",
        "alabama" : "-86.279118",    
        "ak" : "-134.419740",        
        "alaska" : "-134.419740",    
        "az" : "-112.073844",        
        "arizona" : "-112.073844",   
        "ar" : "-92.331122",
        "arkansas" : "-92.331122",   
        "ca" : "-121.468926",        
        "california" : "-121.468926",
        "co" : "-104.984167",
        "colorado" : "-104.984167",
        "ct" : "-72.677",
        "connecticut" : "-72.677",
        "de" : "-75.526755",
        "delaware" : "-75.526755",
        "fl" : "-84.27277",
        "florida" : "-84.27277",
        "ga" : "-84.39",
        "georgia" : "-84.39",
        "hi" : "-157.826182",
        "hawaii" : "-157.826182",
        "id" : "-116.237651",
        "idaho" : "-116.237651",
        "il" : "-89.650373",
        "illinois" : "-89.650373",
        "in" : "-86.147685",
        "indiana" : "-86.147685",
        "ia" : "-93.620866",
        "iowa" : "-93.620866",
        "ks" : "-95.69",
        "kansas" : "-95.69",
        "ky" : "-84.86311",
        "kentucky" : "-84.86311",
        "la" : "-91.140229",
        "louisiana" : "-91.140229",
        "me" : "-69.765261",
        "maine" : "-69.765261",
        "md" : "-76.501157",
        "maryland" : "-76.501157",
        "ma" : "-71.0275",
        "massachusetts" : "-71.0275",
        "mi" : "-84.5467",
        "michigan" : "-84.5467",
        "mn" : "-93.094",
        "minnesota" : "-93.094",
        "ms" : "-90.207",
        "mississippi" : "-90.207",
        "mo" : "-92.189283",
        "missouri" : "-92.189283",
        "mt" : "-112.027031",
        "montana" : "-112.027031",
        "ne" : "-96.675345",
        "nebraska" : "-96.675345",
        "nv" : "-119.753877",
        "nevada" : "-119.753877",
        "nh" : "-71.549127",
        "new hampshire" : "-71.549127",
        "nj" : "-74.756138",
        "new jersey" : "-74.756138",
        "nm" : "-105.964575",
        "new mexico" : "-105.964575",
        "ny" : "-73.781339",
        "new york" : "-73.781339",
        "nc" : "-78.638",
        "north carolina" : "-78.638",
        "nd" : "-100.779004",
        "north dakota" : "-100.779004",
        "oh" : "-83.000647",
        "ohio" : "-83.000647",
        "ok" : "-97.534994",
        "oklahoma" : "-97.534994",
        "or" : "-123.029159",
        "oregon" : "-123.029159",
        "pa" : "-76.875613",
        "pennsylvania" : "-76.875613",
        "ri" : "-71.422132",
        "rhode island" : "-71.422132",
        "sc" : "-81.035",
        "south carolina" : "-81.035",
        "sd" : "-100.336378",
        "south dakota" : "-100.336378",
        "tn" : "-86.784",
        "tennessee" : "-86.784",
        "tx" : "-97.75",
        "texas" : "-97.75",
        "ut" : "-111.892622",
        "utah" : "-111.892622",
        "vt" : "-72.57194",
        "vermont" : "-72.57194",
        "va" : "-77.46",
        "virginia" : "-77.46",
        "wa" : "-122.893077",
        "washington" : "-122.893077",
        "wv" : "-81.633294",
        "west virginia" : "-81.633294",
        "wi" : "-89.384444",
        "wisconsin" : "-89.384444",
        "wy" : "-104.802042",
        "wyoming" : "-104.802042"
    }

    # import json

    # with open('US_caps.json') as json_file:
    #     data = json.load(json_file)
    #     for i in data:
    #         print('"' + i['abbr'].lower() + '"' + " : " + '"' + i['long'] + '",')
    #         print('"' + i['name'].lower() + '"' + " : " + '"' + i['long'] + '",')

    if state not in longs.keys():
        return -1
    return longs[state]


def reverseGeocode(coordinates):
    from geopy.geocoders import Nominatim as nm
    locator = nm(user_agent="myGeocoder")
    try:
        location = locator.reverse(coordinates)
    except:
        return {}
    states_cap = {
        "al" : "Montgomery",
        "alabama" : "Montgomery",
        "ak" : "Juneau",
        "alaska" : "Juneau",     
        "az" : "Phoenix",
        "arizona" : "Phoenix",
        "ar" : "Little Rock",
        "arkansas" : "Little Rock",
        "ca" : "Sacramento",
        "california" : "Sacramento",
        "co" : "Denver",
        "colorado" : "Denver",
        "ct" : "Hartford",
        "connecticut" : "Hartford",
        "de" : "Dover",
        "delaware" : "Dover",
        "fl" : "Tallahassee",
        "florida" : "Tallahassee",
        "ga" : "Atlanta",
        "georgia" : "Atlanta",
        "hi" : "Honolulu",
        "hawaii" : "Honolulu",
        "id" : "Boise",
        "idaho" : "Boise",
        "il" : "Springfield",
        "illinois" : "Springfield",
        "in" : "Indianapolis",
        "indiana" : "Indianapolis",
        "ia" : "Des Moines",
        "iowa" : "Des Moines",
        "ks" : "Topeka",
        "kansas" : "Topeka",
        "ky" : "Frankfort",
        "kentucky" : "Frankfort",
        "la" : "Baton Rouge",
        "louisiana" : "Baton Rouge",
        "me" : "Augusta",
        "maine" : "Augusta",
        "md" : "Annapolis",
        "maryland" : "Annapolis",
        "ma" : "Boston",
        "massachusetts" : "Boston",
        "mi" : "Lansing",
        "michigan" : "Lansing",
        "mn" : "Saint Paul",
        "minnesota" : "Saint Paul",
        "ms" : "Jackson",
        "mississippi" : "Jackson",
        "mo" : "Jefferson City",
        "missouri" : "Jefferson City",
        "mt" : "Helana",
        "montana" : "Helana",
        "ne" : "Lincoln",
        "nebraska" : "Lincoln",
        "nv" : "Carson City",
        "nevada" : "Carson City",
        "nh" : "Concord",
        "new hampshire" : "Concord",
        "nj" : "Trenton",
        "new jersey" : "Trenton",
        "nm" : "Santa Fe",
        "new mexico" : "Santa Fe",
        "ny" : "Albany",
        "new york" : "Albany",
        "nc" : "Raleigh",
        "north carolina" : "Raleigh",
        "nd" : "Bismarck",
        "north dakota" : "Bismarck",
        "oh" : "Columbus",
        "ohio" : "Columbus",
        "ok" : "Oklahoma City",
        "oklahoma" : "Oklahoma City",
        "or" : "Salem",
        "oregon" : "Salem",
        "pa" : "Harrisburg",
        "pennsylvania" : "Harrisburg",
        "ri" : "Providence",
        "rhode island" : "Providence",
        "sc" : "Columbia",
        "south carolina" : "Columbia",
        "sd" : "Pierre",
        "south dakota" : "Pierre",
        "tn" : "Nashville",
        "tennessee" : "Nashville",
        "tx" : "Austin",
        "texas" : "Austin",
        "ut" : "Salt Lake City",
        "utah" : "Salt Lake City",
        "vt" : "Montpelier",
        "vermont" : "Montpelier",
        "va" : "Richmond",
        "virginia" : "Richmond",
        "wa" : "Olympia",
        "washington" : "Olympia",
        "wv" : "Charleston",
        "west virginia" : "Charleston",
        "wi" : "Madison",
        "wisconsin" : "Madison",
        "wy" : "Cheyenne",
        "wyoming" : "Cheyenne"
    }
    location = location.raw["display_name"]#.split(',')#.rstrip().lstrip()
    state_found = 0
    cap_found = 0
    ans = []
    for part in location.split(','):
        if not part.lstrip().isnumeric():
            if part[1:] in states_cap.values():
                state_found = 1
                ans.append(part[1:].replace(" ", "+"))
            if part[1:].lower() in states_cap.keys():
                cap_found = 1
                ans.append(part[1:].replace(" ", "+"))

    if not state_found or not cap_found:
        return -1
    else:
        return "+".join(ans)